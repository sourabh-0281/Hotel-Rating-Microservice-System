#THIS IS USE TO CHANGE THE NAME THAT APPEARS IN EUREKA SERVER
spring.application.name=USER-MICROSERVICES

spring.datasource.url=jdbc:mysql://localhost:3306/MICROUserService?serverTimezone=UTC
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=Sk@007007
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
server.port=8081

#EUREKA
#eureka.instance.prefer-ip-address=true
#eureka.client.fetch-registry=true
#eureka.client.register-with-eureka=true
#eureka.client.service-url.defaultZone: http://localhost:8761/eureka

  #	WE HAVE COMMENTED THE ABOVE LINE AS WE ARE USING CONFIG SEVER TO TAKE COMMON DEPENDENCIES

#CONFIG SERVER 
spring.config.import=configserver:http://localhost:8085

#RESILIENCE4J CONFIG and ACTUATOR CONFIG

 #actuator
 #These properties are used to configure the visibility and details of circuit breaker health information in a Spring Boot application:
 
 #Enables the health indicators for circuit breakers. 
management.health.circuitbreakers.enabled=true
#Exposes the /actuator/health endpoint over HTTP     	
management.endpoints.web.exposure.include=health
#Configures the /actuator/health endpoint to always show detailed information about the health status,
management.endpoint.health.show-details=always

#resilience
resilience4j.circuitbreaker.instances.userbreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.userbreaker.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.userbreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.userbreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.userbreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.userbreaker.wait-duration-in-open-state=6s
resilience4j.circuitbreaker.instances.userbreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.userbreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.userbreaker.sliding-window-type=count-based

#RETRY
 resilience4j.retry.instances.retrybreaker.max-attempts=3
 resilience4j.retry.instances.retrybreaker.wait-duration=5s
 
 #RATELIMITER
 #the below two line means in 4seconds we want to allow only  2 requests
 resilience4j.ratelimiter.instances.retrybreaker.limit-refresh-period=2s
 resilience4j.ratelimiter.instances.retrybreaker.limit-for-period=2
 resilience4j.ratelimiter.instances.retrybreaker.timeout-duration=0s